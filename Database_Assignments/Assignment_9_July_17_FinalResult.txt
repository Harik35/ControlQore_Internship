----1.  Use the SubTotal value in SaleOrderHeader to list orders from the largest to the smallest. For each order show the CompanyName and the SubTotal and the total weight of the order.---

SELECT SOD.SalesOrderID , C.CompanyName, SUM((P.Weight*SOD.OrderQty)) AS 'Net Wieght'
FROM SalesLT.SalesOrderDetail AS SOD
	INNER JOIN SalesLT.Product AS P
		ON SOD.ProductID = P.ProductID
	INNER JOIN SalesLT.SalesOrderHeader AS SOH
		ON SOH.SalesOrderID = SOD.SalesOrderID
	INNER JOIN SalesLT.Customer AS C
		ON C.CustomerID = SOH.CustomerID
	GROUP BY SOD.SalesOrderID, SOH.SubTotal,C.CompanyName


---2. How many products in ProductCategory ‘Cranksets’ have been sold to an address in ‘London’?-------

SELECT * 
FROM SalesLT.ProductCategory AS PC 
	INNER JOIN SalesLT.Product AS P
		ON PC.ProductCategoryID = P.ProductCategoryID
	INNER JOIN SalesLT.SalesOrderDetail AS SOD
		ON SOD.ProductID = P.ProductID
	INNER JOIN SalesLT.SalesOrderHeader AS SOH
		ON SOH.SalesOrderID = SOD.SalesOrderID
	INNER JOIN SalesLT.Address AS A
		ON A.AddressID = SOH.BillToAddressID
WHERE PC.Name = 'CRANKSETS' AND A.City = 'LONDON'


----3.For every customer with a ‘Main Office’ in Dallas show AddressLine1 of the ‘Main Office’ and AddressLine1 of the ‘Shipping’ address - if there is no shipping address leave it blank. Use one row per customer.---

SELECT c.CustomerID, ca.AddressType, ca.AddressID, ad.AddressLine1 ,ad2.AddressLine1 AS 'ShippinG address', ca2.AddressID AS 'ca2 addressid', ca2.AddressType
FROM SalesLT.Customer AS c
	INNER JOIN SalesLT.CustomerAddress AS ca
		ON c.CustomerID = ca.CustomerID
		AND ca.AddressType = 'MAIN OFFICE'
	INNER JOIN SalesLT.Address AS ad
		ON ad.AddressID = ca.AddressID
		AND ad.City = 'DALLAS'
	LEFT JOIN SalesLT.CustomerAddress AS ca2
		ON ca2.CustomerID = ca.CustomerID
		AND ca2.AddressType = 'SHIPPING'
	LEFT JOIN SalesLT.Address AS ad2
		ON ca2.AddressID = ad2.AddressID

-----4. 4.For each order show the SalesOrderID and SubTotal calculated  in three ways--------

---A. From the SalesOrderHeader  (Order header table)--

SELECT SOH.SalesOrderID, SOH.SubTotal
FROM SalesLT.SalesOrderHeader AS SOH

---B. Sum of OrderQtyUnitPrice  ( Order Detail table )-----

SELECT SalesOrderID, SUM(SOD.OrderQty*SOD.UnitPrice) AS 'SubTotal_UNITPRICE'
FROM SalesLT.SalesOrderDetail AS SOD
GROUP BY SOD.SalesOrderID

---C. Sum of OrderQtyListPrice (Product table)-----

SELECT SOD.SalesOrderID, SUM(P.ListPrice*SOD.OrderQty) AS 'SubTotal_LIST PRICE',SUM(SOD.OrderQty*SOD.UnitPrice) AS 'SubTotal_UNITPRICE'
FROM SalesLT.SalesOrderDetail AS SOD
	INNER JOIN SalesLT.Product AS P
		ON P.ProductID = SOD.ProductID
GROUP BY SalesOrderID

----5.Show the best selling item by value.
-----FIRT METHOD
SELECT p2.Name, p2.ProductID
FROM(
SELECT TOP (1) P.ProductID, SUM(SOD.OrderQty*(P.ListPrice- P.StandardCost)) AS 'Profit', SUM (SOD.OrderQty) AS 'TEST'
FROM SalesLT.Product AS P
	INNER JOIN SalesLT.SalesOrderDetail AS SOD
		ON P.ProductID = SOD.ProductID
	GROUP BY P.ProductID
	ORDER BY Profit DESC ) AS sub
	INNER JOIN SalesLT.Product AS p2
		ON p2.ProductID = sub.ProductID

------MODIFIED METHOD
SELECT TOP (1) P.ProductID, P.Name, SUM(SOD.OrderQty*(P.ListPrice- P.StandardCost)) AS 'Profit', SUM (SOD.OrderQty) AS 'NUMBER OF ITEM SOLD'
FROM SalesLT.Product AS P
	INNER JOIN SalesLT.SalesOrderDetail AS SOD
		ON P.ProductID = SOD.ProductID
	GROUP BY P.ProductID, P.Name
	ORDER BY Profit DESC 


----6. From which city 

---A. most no of order
SELECT TOP 1 WITH TIES ad.City ,COUNT(soh.SalesOrderID) AS 'CountOfEachCity'
FROM SalesLT.SalesOrderHeader AS soh
	INNER JOIN SalesLT.Customer AS c
		ON soh.CustomerID = c.CustomerID
	INNER JOIN SalesLT.CustomerAddress AS ca
		ON ca.CustomerID = c.CustomerID
	INNER JOIN SalesLT.Address AS ad
		ON ad.AddressID = ca.AddressID
	GROUP BY ad.City
	ORDER BY  CountOfEachCity DESC

---B.  most profitable city 

-----WE CAN'T USE THIS BECOZ, THIS METHOD IS JUST FINDING THE PRODUCT THAT HAS MADE MORE PROFIT. THE CUSTOMER CAN BUY MULTIPLE PRODUCTS.
-----ALSO THIS BEST SELLING PRODUCT CAN BY BUYED BY ONE OR MORE CUSTOMER. SO THERE WILL BE MULTIPLE CITIES.

-----TO FIND THE CITY THAT SPEND MORE MONEY, WE NEED TO GROUP THE SalesOrderID  IN THE SalesOrderDetail EACH 
-----SalesOrderID HAS DIFFERENT PRODUCT AND DIFFERENT ORDERQTY
--SELECT TOP (1) P.ProductID, P.Name, SUM(SOD.OrderQty*(P.ListPrice- P.StandardCost)) AS 'Profit', SUM (SOD.OrderQty) AS 'TEST'
--FROM SalesLT.Product AS P
--	INNER JOIN SalesLT.SalesOrderDetail AS SOD
--		ON P.ProductID = SOD.ProductID
--	GROUP BY SOD.SalesOrderID
--	ORDER BY Profit DESC 

------SALES ORDER DETAILS MADE BY EACH CUSTOMER. SOME CUSTOMER ORDERED SO MANY PRODUCTS. SO WE NEED TO GROUP THEM ALL.  
------AND BEFORE GROUPING FIND THE AMOUNT BY MULTIPLYING EACH PRODUCT PRICE AND ORDERQTY---- 


----!!!!!ORIGINAL ANSWER!!!!!!!--------------------------------------

SELECT TOP (1) WITH TIES
		SOD.SalesOrderID, COUNT(SOD.OrderQty) AS 'NoOfProducts',
		SUM(P.ListPrice*SOD.OrderQty) AS 'Amount_Spented_By_City', A.City
FROM SalesLT.Product AS P
	INNER JOIN SalesLT.SalesOrderDetail AS SOD
		ON P.ProductID = SOD.ProductID
	INNER JOIN SalesLT.SalesOrderHeader AS SOH
		ON SOH.SalesOrderID = SOD.SalesOrderID
	INNER JOIN SalesLT.Customer AS C
		ON C.CustomerID = SOH.CustomerID
	INNER JOIN SalesLT.CustomerAddress AS CA
		ON CA.CustomerID = C.CustomerID
	INNER JOIN SalesLT.Address AS A
		ON A.AddressID = CA.AddressID
	GROUP BY SOD.SalesOrderID, C.CustomerID,A.City
	ORDER BY Amount_Spented_By_City DESC



--SELECT 
--		SOD.SalesOrderID, COUNT(SOD.OrderQty) AS 'NoOfProducts',
--		SUM((P.ListPrice- P.StandardCost)*SOD.OrderQty) AS 'FromAbove', A.City
--FROM SalesLT.Product AS P
--	INNER JOIN SalesLT.SalesOrderDetail AS SOD
--		ON P.ProductID = SOD.ProductID
--	INNER JOIN SalesLT.SalesOrderHeader AS SOH
--		ON SOH.SalesOrderID = SOD.SalesOrderID
--	INNER JOIN SalesLT.Customer AS C
--		ON C.CustomerID = SOH.CustomerID
--	INNER JOIN SalesLT.CustomerAddress AS CA
--		ON CA.CustomerID = C.CustomerID
--	INNER JOIN SalesLT.Address AS A
--		ON A.AddressID = CA.AddressID
--	GROUP BY SOD.SalesOrderID, C.CustomerID,A.City
--	ORDER BY FromAbove DESC

---C.  which hasn't placed any orders
SELECT SUB.City
FROM (
		SELECT AD.City
		FROM  SalesLT.Customer AS C
			LEFT JOIN  SalesLT.SalesOrderHeader AS SOH
				ON SOH.CustomerID = C.CustomerID
			LEFT JOIN SalesLT.CustomerAddress AS CA
				ON CA.CustomerID = C.CustomerID
			LEFT JOIN SalesLT.Address AS AD
				ON AD.AddressID = CA.AddressID
		WHERE SOH.SalesOrderID IS NULL AND CA.CustomerID IS NOT NULL AND AD.AddressID IS NOT NULL ) AS SUB
		GROUP BY SUB.City